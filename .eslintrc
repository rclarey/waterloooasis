// http://eslint.org/docs/user-guide/configuring
{
    "env": {
        "node": true,
        "mocha": true,
        "browser": true,
        "jquery": true,
        "es6": true,
    },
    "parser": "babel-eslint",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true,
            // ES6 features supported by Babel that we support in client code
            "arrowFunctions": true,
            "forOf": true,
            "defaultParams": true,
            "destructuring": true,
            "objectLiteralShorthandProperties": true,
            "restParams": true,
            "spread": true,
        },
    },
    "plugins": [
        "mocha",
        "react",
        "babel",
        "flowtype",
    ],
    "extends": [
        "eslint:recommended",
    ],
    // List of available rules: http://eslint.org/docs/rules/
    //
    // Use this comment syntax to disable an eslint rule on a particular line:
    // // eslint-disable-line rule-name
    "rules": {
        // eslint:recommended rule set where we want to issue warnings instead of errors
        "no-case-declarations": "warn",
        "no-console": "warn",
        "no-debugger": "warn",
        "no-empty": "warn",
        "no-extra-boolean-cast": "warn",
        "no-extra-semi": "warn",
        "no-mixed-spaces-and-tabs": "warn",
        "no-redeclare": "warn",
        "no-regex-spaces": "warn",
        "no-self-assign": "warn",
        "no-sparse-arrays": "warn",
        "no-unreachable": "warn",

        // eslint:recommended rules where we want to change an option
        "no-undef": ["error", {"typeof": true}],
        "no-useless-escape": "off", // this flags a whole bunch of regexes which seemingly have useful escapes; need to investigate further

        // eslint:recommended rules we disagree with
        "require-yield": "off", // flags async functions without await, which are still useful

        // A bunch of additional best practices and style preferences:
        // NOTE this is addition to the "recommended" rule set.
        "array-bracket-spacing": "warn",
        "array-callback-return": "error",
        "arrow-parens": ["warn", "as-needed"],
        "arrow-spacing": "warn",
        "block-scoped-var": "error",
        "block-spacing": "warn",
        "comma-dangle": ["warn", {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "always-multiline",
        }],
        "comma-spacing": "warn",
        "comma-style": "warn",
        "computed-property-spacing": "warn",
        "consistent-return": "error",
        "consistent-this": ["warn", "that"],
        "curly": "warn",
        "default-case": "warn",
        "dot-location": ["warn", "property"],
        "dot-notation": ["warn", {"allowPattern": "[$_0-9]"}], // Allow array notation for "props" with $, _, or numbers.
        "eqeqeq": "error",
        "eol-last": "warn",
        "func-call-spacing": "error",
        "guard-for-in": "error",
        "handle-callback-err": "error",
        "implicit-arrow-linebreak": "warn",
        "indent": ["warn", 4, {"SwitchCase": 1}],
        "jsx-quotes": "warn",
        "key-spacing": "warn",
        "keyword-spacing": "warn",
        "linebreak-style": "warn",
        "new-parens": "warn",
        "no-array-constructor": "error",
        "no-async-promise-executor": "error",
        "no-buffer-constructor": "warn",
        "no-caller": "error",
        "no-confusing-arrow": ["warn", {"allowParens": true}],
        "no-constant-condition": ["warn", {"checkLoops": false}],
        "no-delete-var": "error",
        "no-div-regex": "warn",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "warn",
        "no-extra-label": "error",
        "no-floating-decimal": "warn",
        "no-implicit-globals": "warn",
        "no-implied-eval": "error",
        "no-iterator": "error",
        "no-labels": ["error", {
            "allowLoop": true,
        }],
        "no-label-var": "error",
        "no-loop-func": "error",
        "no-lone-blocks": "error",
        "no-mixed-operators": ["warn", {"groups": [["&&", "||"]]}],
        "no-mixed-requires": "error",
        "no-multi-assign": "warn",
        "no-multi-spaces": ["warn", { ignoreEOLComments: true }],
        "no-multi-str": "warn",
        "no-multiple-empty-lines": ["warn", {"max": 1}],
        "no-new-object": "warn",
        "no-new-require": "error",
        "no-new-wrappers": "warn",
        "no-octal-escape": "error",
        "no-path-concat": "error",
        "no-proto": "error",
        "no-restricted-modules": ["error", { "paths": ["assert"] }],
        "no-script-url": "error",
        "no-sequences": "error",
        "no-self-compare": "error",
        "no-shadow": "error",
        "no-shadow-restricted-names": "error",
        "no-tabs": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "warn",
        "no-trailing-spaces": "warn",
        "no-undef-init": "warn",
        "no-unneeded-ternary": "warn",
        "no-unused-expressions": "error",
        "no-unused-vars": ["warn", {
            "vars": "all",
            "args": "none"
        }],
        "no-use-before-define": ["error", "nofunc"],
        "no-useless-call": "warn",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-constructor": "warn",
        "no-useless-rename": "warn",
        "no-void": "error",
        "no-whitespace-before-property": "warn",
        "no-with": "error",
        "object-curly-spacing": "warn",
        "one-var-declaration-per-line": "warn",
        "operator-linebreak": ["warn", "after"],
        "padded-blocks": ["warn", "never"],
        "prefer-const": ["warn", {"ignoreReadBeforeAssign": true}],
        "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": "error",
        "prefer-spread": "warn",
        "quote-props": ["error", "as-needed"],
        "quotes": ["warn", "single", "avoid-escape"],
        "radix": "error",
        "rest-spread-spacing": ["warn", "never"],
        "semi": "warn",
        "semi-spacing": "warn",
        "semi-style": "warn",
        "space-before-blocks": "warn",
        "space-before-function-paren": ["warn", {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
        }],
        "space-in-parens": "warn",
        "space-infix-ops": "warn",
        "space-unary-ops": "warn",
        "spaced-comment": "warn",
        "switch-colon-spacing": "warn",
        "yoda": "warn",

        // Needs some cleanup before enforcing:
        // "no-invalid-this": "error",
        // "no-lonely-if": "warn",
        // "no-param-reassign": "error",
        // "no-return-assign": "error", // https://github.com/eslint/eslint/issues/5150

        // eslint-plugin-mocha rules:
        // https://github.com/lo1tuma/eslint-plugin-mocha/tree/master/docs/rules
        "mocha/handle-done-callback": "error",
        "mocha/no-exclusive-tests": "warn",
        "mocha/no-global-tests": "warn",
        "mocha/no-identical-title": "warn",
        "mocha/no-mocha-arrows": "warn",
        "mocha/no-nested-tests": "warn",
        "mocha/no-pending-tests": "warn",
        "mocha/no-return-and-callback": "warn",
        "mocha/no-skipped-tests": "warn",
        "mocha/no-sibling-hooks": "warn",

        // eslint-plugin-react rules:
        // https://github.com/yannickcr/eslint-plugin-react
        "react/default-props-match-prop-types": "error",
        "react/jsx-closing-tag-location": "warn",
        "react/jsx-boolean-value": ["warn", "always"],
        "react/jsx-closing-bracket-location": ["warn", {"nonEmpty": "after-props", "selfClosing": "tag-aligned"}],
        "react/jsx-curly-spacing": "warn",
        "react/jsx-indent": "warn",
        "react/jsx-indent-props": "warn",
        "react/jsx-no-duplicate-props": "error",
        "react/jsx-no-undef": "error",
        "react/jsx-uses-react": "error",
        "react/jsx-uses-vars": "warn",
        "react/jsx-wrap-multilines": [warn, {"arrow": false}],
        "react/no-did-mount-set-state": "warn",
        "react/no-did-update-set-state": "warn",
        "react/no-direct-mutation-state": "error",
        "react/no-redundant-should-component-update": "error",
        "react/no-unknown-property": "error",
        "react/no-will-update-set-state": "warn",
        "react/prop-types": ["warn", {"ignore": ["children", "className", "style"]}],
        "react/react-in-jsx-scope": "error",
        "react/self-closing-comp": "warn",
        "react/style-prop-object": "error",
        "react/void-dom-elements-no-children": "error",

        // eslint-plugin-babel rules:
        // https://github.com/babel/eslint-plugin-babel
        "babel/semi": "warn",

        // eslint-plugin-flowtype rules:
        "flowtype/boolean-style": ["warn", "boolean"],
        "flowtype/define-flow-type": "warn",
        "flowtype/delimiter-dangle": ["warn", "always-multiline"],
        "flowtype/generic-spacing": "warn",
        "flowtype/no-dupe-keys": "error",
        "flowtype/no-primitive-constructor-types": "error",
        "flowtype/no-weak-types": ["error", {
            "any": true,
            "Object": false,
            "Function": false,
        }],
        "flowtype/object-type-delimiter": "warn",
        "flowtype/require-valid-file-annotation": "error",
        "flowtype/semi": "warn",
        "flowtype/space-after-type-colon": ["warn", "always", {"allowLineBreak": true}],
        "flowtype/space-before-generic-bracket": "warn",
        "flowtype/space-before-type-colon": "warn",
        "flowtype/union-intersection-spacing": "warn",
    }
}
